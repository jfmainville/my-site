name: Build Docker image and deploy to the DigitalOcean Kubernetes cluster
on:
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read
jobs:
  build:
    runs-on: ubuntu-24.04
    environment: production
    steps:
      - name: Checkout the current git repository
        uses: actions/checkout@main
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@main
        with:
          role-to-assume: ${{ vars.AWS_GITHUB_ACTIONS_OIDC_ROLE_ARN }}
          aws-region: ${{ vars.AWS_PRIMARY_REGION }}
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Docker build and push image to AWS ECR
        run: |
          docker build --build-arg NEXT_PUBLIC_AWS_BUCKET_URL="${{ vars.NEXT_PUBLIC_AWS_BUCKET_URL }}" -t ${{ vars.AWS_ECR_URL }}/my-site:latest -t ${{ vars.AWS_ECR_URL }}/my-site:${{ github.SHA }} .
          docker push ${{ vars.AWS_ECR_URL }}/my-site:latest
          docker push ${{ vars.AWS_ECR_URL }}/my-site:${{ github.SHA }}
  deploy:
    runs-on: ubuntu-24.04
    environment: production
    steps:
      - name: Checkout the current git repository
        uses: actions/checkout@main
      - name: Install doctl on the runner
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Save the DigitalOcean Kubernetes kubeconfig configuration with a short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ vars.DIGITALOCEAN_DOKS_CLUSTER_NAME }}
      - name: Deploy the latest Docker image in the DigitalOcean Kubernetes cluster
        run: |-
          kubectl apply -k kubernetes/${{ vars.ENVIRONMENT_NAME }}/
          kubectl set image deployment/my-site-deployment my-site-container=${{ vars.AWS_ECR_URL }}/my-site:${{ github.SHA }}
    needs: build
